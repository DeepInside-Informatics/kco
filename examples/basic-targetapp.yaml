apiVersion: operator.kco.local/v1alpha1
kind: TargetApp
metadata:
  name: web-application
  namespace: default
spec:
  # Label selector to find target application pods
  selector:
    matchLabels:
      app: web-app
      component: backend
  
  # GraphQL endpoint configuration
  graphqlEndpoint: "/graphql"
  pollingInterval: 30
  timeout: 10
  maxRetries: 3
  
  # GraphQL query to fetch application state
  stateQuery: |
    query ApplicationStatus {
      application {
        status
        health
        version
        uptime
        metrics {
          requestsPerSecond
          errorRate
          responseTime
        }
      }
    }
  
  # Actions to execute based on state changes
  actions:
    # Restart pod when health becomes unhealthy
    - trigger:
        field: "application.health"
        condition: "equals"
        value: "unhealthy"
      action: "restart_pod"
      parameters:
        gracePeriod: 30
    
    # Scale up when error rate is high
    - trigger:
        field: "application.metrics.errorRate"
        condition: "greater_than"
        value: 0.05  # 5% error rate
      action: "scale_deployment"
      parameters:
        deploymentName: "web-app"
        replicas: 5
    
    # Send webhook notification on status changes
    - trigger:
        field: "application.status"
        condition: "not_equals"
        value: "running"
      action: "webhook"
      parameters:
        url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
        method: "POST"
        headers:
          Content-Type: "application/json"
        payload:
          text: "Application {{tapp_name}} status changed to unhealthy"
          channel: "#alerts"